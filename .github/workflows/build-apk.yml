name: Build and Upload APK

on:
  push:
    branches:
      - release  # Trigger on pushes to the release branch

permissions:
  contents: write  # Ensure the token can create a release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      # Step 4: Build Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # Step 5: Verify APK path
      - name: Verify APK path
        run: ls sample-app/build/outputs/apk/debug/

      # Step 6: Increment version tag
      - name: Increment Version
        id: increment_version
        run: |
          VERSION_FILE=VERSION
          CURRENT_VERSION=$(cat $VERSION_FILE)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$patch"
          echo $NEW_VERSION > $VERSION_FILE
          echo "::set-output name=new_version::$NEW_VERSION"

      # Step 7: Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.new_version }}  # Use the incremented version
          release_name: "Debug Release ${{ steps.increment_version.outputs.new_version }}"
          draft: false
          prerelease: true

      # Step 8: Upload Debug APK to Release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: sample-app/build/outputs/apk/debug/sample-app-debug.apk  # Adjust if needed
          asset_name: sample-app-debug.apk
          asset_content_type: application/vnd.android.package-archive
